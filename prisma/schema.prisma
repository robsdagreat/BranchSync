generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum Permission {
  CREATE
  READ
  UPDATE
  DELETE
}

model User {
  id          String         @id @default(uuid())
  email       String         @unique
  password    String
  role        Role          @default(USER)
  warehouses  WarehouseUser[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model WarehouseUser {
  id          String      @id @default(uuid()) // Added to match GraphQL schema
  user        User        @relation(fields: [userId], references: [id])
  userId      String
  warehouse   Warehouse   @relation(fields: [warehouseId], references: [id])
  warehouseId String
  permissions Permission[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@unique([userId, warehouseId])
}

model Warehouse {
  id        String     @id @default(uuid())
  name      String
  location  String
  capacity  Int 
  inventory Inventory[]
  users     WarehouseUser[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt 
}

model Product {
    id          String     @id @default(uuid())
    name        String 
    description String?
    inventory   Inventory[]
    createdAt   DateTime   @default(now())
    updatedAt   DateTime   @updatedAt
}

model Inventory {
    id String   @id       @default(uuid())
    warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
    warehouseId String
    product     Product   @relation(fields: [productId], references: [id])
    productId   String
    quantity    Int
    minStock    Int
    maxStock    Int
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt

    @@unique([warehouseId, productId])
}
